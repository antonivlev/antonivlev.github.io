{"version":3,"sources":["database/firebase.js","components/Story.jsx","index.jsx","pages/home/Home.jsx"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Story","story","React","useState","liked","setLiked","useEffect","storyID","link","toLowerCase","replace","firestore","collection","doc","get","then","dbStoryData","data","isLiked","Card","className","CardContent","Typography","color","gutterBottom","pubDate","variant","component","title","content","CardActions","Button","size","onClick","window","open","focus","IconButton","set","ReactDOM","render","stories","setStories","Parser","parseURL","feed","console","log","items","catch","err","map","s","key","guid","document","getElementById"],"mappings":"mYAaAA,IAASC,cAXM,CACbC,OAAQ,0CACRC,WAAY,oCACZC,YAAa,2CACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIFT,QAAf,EC4DeU,EA7DD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACDC,IAAMC,UAAS,GADd,mBACpBC,EADoB,KACbC,EADa,KAG3BC,qBAAU,WACR,IAAMC,EAAUN,EAAMO,KAAKC,cAAcC,QAAQ,WAAY,IAAIA,QAAQ,MAAO,KAErEpB,EAASqB,YACDC,WAAW,iBAAiBC,IAAIN,GAE3CO,MAAMC,MAAK,SAACF,GAClB,IAAMG,EAAcH,EAAII,OACpBD,GAAaX,EAASW,EAAYE,cAEvC,CAACjB,EAAMO,OAcV,OACE,kBAACW,EAAA,EAAD,CAAMC,UAAU,cACd,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAC3CvB,EAAMwB,SAET,kBAACH,EAAA,EAAD,CAAYE,cAAY,EAACE,QAAQ,KAAKC,UAAU,MAC7C1B,EAAM2B,OAET,kBAACN,EAAA,EAAD,CAAYC,MAAM,iBACftB,EAAM4B,UAIX,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEX,UAAU,mBACVY,KAAK,QACLT,MAAM,UACNU,QAAS,WACKC,OAAOC,KAAKlC,EAAMO,KAAM,UAChC4B,UANR,aAWA,kBAACC,EAAA,EAAD,CAAYJ,QAtCO,WACvB,IAAM1B,EAAUN,EAAMO,KAAKC,cAAcC,QAAQ,WAAY,IAAIA,QAAQ,MAAO,KAErEpB,EAASqB,YACDC,WAAW,iBAAiBC,IAAIN,GAC3C+B,IAAI,CACVpB,SAAUd,IAGZC,GAAUD,KA8BHA,EAAQ,kBAAC,IAAD,MAAkB,kBAAC,IAAD,UC9DrCmC,IAASC,OAAO,mBCCD,WAAO,IAAD,EACWrC,mBAAS,IADpB,mBACZsC,EADY,KACHC,EADG,KAanB,OAVApC,qBAAU,YACO,IAAIqC,KACZC,SAAS,4BACb7B,MAAK,SAAC8B,GACLC,QAAQC,IAAIF,GACZH,EAAWG,EAAKG,UAEjBC,OAAM,SAACC,GAAD,OAASJ,QAAQC,IAAIG,QAC7B,IAGD,yBAAK9B,UAAU,kBACZqB,EAAQU,KAAI,SAACC,GAAD,OAAO,kBAAC,EAAD,CAAOC,IAAKD,EAAEE,KAAMrD,MAAOmD,UDhBrC,MAAUG,SAASC,eAAe,U","file":"static/js/main.c6ccc069.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst config = {\n  apiKey: 'AIzaSyDCoD2HrdDqUwnYPwv1dPuyLNrmy1zAsOU',\n  authDomain: 'news-viewer-9c5e5.firebaseapp.com',\n  databaseURL: 'https://news-viewer-9c5e5.firebaseio.com',\n  projectId: 'news-viewer-9c5e5',\n  storageBucket: 'news-viewer-9c5e5.appspot.com',\n  messagingSenderId: '845065741149',\n  appId: '1:845065741149:web:a0d740586ccca8ada5feb4',\n  measurementId: 'G-8XT6P50Q05',\n};\n\nfirebase.initializeApp(config);\nexport default firebase;\n","import React, { useEffect } from 'react';\nimport './Story.css';\n\n// material components\nimport {\n  Card, Button, Typography, CardContent, CardActions, IconButton,\n} from '@material-ui/core';\nimport ThumbUpOutlinedIcon from '@material-ui/icons/ThumbUpOutlined';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\n\nimport firebase from '../database/firebase';\n\n\nconst Story = ({ story }) => {\n  const [liked, setLiked] = React.useState(false);\n\n  useEffect(() => {\n    const storyID = story.link.toLowerCase().replace(/[^\\w ]+/g, '').replace(/ +/g, '-');\n\n    const db = firebase.firestore();\n    const dbStory = db.collection('liked-stories').doc(storyID);\n\n    dbStory.get().then((doc) => {\n      const dbStoryData = doc.data();\n      if (dbStoryData) setLiked(dbStoryData.isLiked);\n    });\n  }, [story.link]);\n\n  const setLikedAndWrite = () => {\n    const storyID = story.link.toLowerCase().replace(/[^\\w ]+/g, '').replace(/ +/g, '-');\n\n    const db = firebase.firestore();\n    const dbStory = db.collection('liked-stories').doc(storyID);\n    dbStory.set({\n      isLiked: !liked,\n    });\n\n    setLiked(!liked);\n  };\n\n  return (\n    <Card className=\"story-card\">\n      <CardContent>\n        <Typography color=\"textSecondary\" gutterBottom>\n          {story.pubDate}\n        </Typography>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {story.title}\n        </Typography>\n        <Typography color=\"textSecondary\">\n          {story.content}\n        </Typography>\n      </CardContent>\n\n      <CardActions>\n        <Button\n          className=\"read-more-button\"\n          size=\"small\"\n          color=\"primary\"\n          onClick={() => {\n            const win = window.open(story.link, '_blank');\n            win.focus();\n          }}\n        >\n          Read more\n        </Button>\n        <IconButton onClick={setLikedAndWrite}>\n          {liked ? <ThumbUpIcon /> : <ThumbUpOutlinedIcon />}\n        </IconButton>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Story;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './pages/home/Home';\n\nReactDOM.render(<Home />, document.getElementById('root'));\n","import React, { useEffect, useState } from 'react';\nimport './Home.css';\nimport Parser from 'rss-parser';\n\nimport Story from '../../components/Story';\n\nexport default () => {\n  const [stories, setStories] = useState([]);\n\n  useEffect(() => {\n    const parser = new Parser();\n    parser.parseURL('/news/rss.xml?edition=uk')\n      .then((feed) => {\n        console.log(feed);\n        setStories(feed.items);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <div className=\"stories-column\">\n      {stories.map((s) => <Story key={s.guid} story={s} />)}\n    </div>\n  );\n};\n"],"sourceRoot":""}